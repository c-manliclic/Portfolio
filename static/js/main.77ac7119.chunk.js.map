{"version":3,"sources":["components/Navbar.js","components/Sidebar.js","theme.js","components/GlobalStyles.js","components/Layout.js","helpers/ExperienceHelper.js","pages/Experience.js","helpers/ProjectHelper.js","pages/Projects.js","helpers/SkillHelper.js","pages/Skills.js","pages/Home.js","routes.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","appBar","zIndex","drawer","backgroundColor","boxShadow","titleText","fontSize","fontWeight","textTransform","left","titleContainer","flex","textAlign","paddingLeft","Navbar","props","classes","React","useState","navTheme","setNavTheme","useEffect","window","localStorage","getItem","handleDrawerClose","toggleSidebar","AppBar","position","className","Toolbar","disableGutters","IconButton","aria-label","onClick","openSidebar","edge","Tooltip","title","Button","to","component","Link","themeButton","setItem","items","href","icon","width","flexShrink","drawerPaper","drawerText","backdrop","bottomPush","bottom","padding","opacity","Sidebar","Drawer","variant","anchor","open","paper","Divider","List","map","item","ListItem","listItem","button","ListItemIcon","ListItemText","primary","Typography","color","Date","getFullYear","Backdrop","baseTheme","createTheme","typography","fontFamily","join","h1","h2","h3","h4","h5","h6","body1","darkTheme","palette","type","lightTheme","createStyles","boxSizing","margin","html","height","body","a","textDecoration","GlobalStyles","Layout","sidebar","setSideBar","setTheme","handleSidebar","data","ThemeProvider","CssBaseline","id","style","top","options","fpsLimit","interactivity","detectsOn","events","enable","mode","onHover","resize","modes","bubble","distance","duration","size","repulse","particles","value","links","collisions","move","direction","outMode","random","speed","straight","number","density","value_area","shape","detectRetina","card","ExperienceCard","organization","Grid","xs","md","lg","Card","CardContent","container","paddingBottom","ExperienceList","experiences","justifyContent","alignItems","spacing","experience","index","generateExperienceCards","Experience","Helmet","Container","translateY","delay","e","i","paragraph","display","ProjectCard","imageLink","description","link","CardMedia","objectPosition","image","process","gutterBottom","CardActions","alignSelf","target","ProjectList","projects","project","generateProjectCards","Projects","SkillCard","skillName","yearsOfExperience","generateSkillCards","skills","marginBottom","skill","name","FrontEndSkillList","BackEndSkillList","Skills","marginTop","Home","justify","routes","path","element","children","App","useRoutes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77ac7119.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\r\nimport BrightnessHighIcon from \"@material-ui/icons/BrightnessHigh\";\r\nimport {\r\n  Button,\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    backgroundColor: \"transparent\",\r\n    boxShadow: \"none\",\r\n  },\r\n  titleText: {\r\n    fontSize: \"1.25rem\",\r\n    fontWeight: 900,\r\n    textTransform: \"none\",\r\n    left: \"10px\",\r\n  },\r\n  titleContainer: {\r\n    flex: 1,\r\n    textAlign: \"left\",\r\n    paddingLeft: \"16px\",\r\n  },\r\n}));\r\n\r\nexport default function Navbar(props) {\r\n  const classes = useStyles();\r\n  const [navTheme, setNavTheme] = React.useState(\"light\");\r\n  const { theme } = props;\r\n\r\n  React.useEffect(() => {\r\n    setNavTheme(window.localStorage.getItem(\"theme\"));\r\n    theme(window.localStorage.getItem(\"theme\"));\r\n  }, [theme]);\r\n\r\n  const handleDrawerOpen = () => {\r\n    props.toggleSidebar(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    props.toggleSidebar(false);\r\n  };\r\n\r\n  const handleDarkMode = () => {\r\n    window.localStorage.setItem(\"theme\", \"dark\");\r\n    setNavTheme(\"dark\");\r\n    theme(\"dark\");\r\n  };\r\n\r\n  const handleLightMode = () => {\r\n    window.localStorage.setItem(\"theme\", \"light\");\r\n    setNavTheme(\"light\");\r\n    theme(\"light\");\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar disableGutters={true}>\r\n        <div className={classes.titleContainer}>\r\n          <IconButton\r\n            aria-label=\"open drawer\"\r\n            onClick={\r\n              props.openSidebar === false ? handleDrawerOpen : handleDrawerClose\r\n            }\r\n            edge=\"start\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Tooltip title=\"That's me!\">\r\n            <Button\r\n              onClick={handleDrawerClose}\r\n              {...{\r\n                to: \"/\",\r\n                component: Link,\r\n                className: classes.titleText,\r\n              }}\r\n            >\r\n              Colin\r\n            </Button>\r\n          </Tooltip>\r\n        </div>\r\n        <Tooltip title={navTheme === \"light\" ? \"Dark Mode\" : \"Light Mode\"}>\r\n          <IconButton\r\n            className={classes.themeButton}\r\n            aria-label=\"theme mode\"\r\n            onClick={navTheme === \"light\" ? handleDarkMode : handleLightMode}\r\n          >\r\n            {navTheme === \"light\" ? (\r\n              <Brightness4Icon />\r\n            ) : (\r\n              <BrightnessHighIcon />\r\n            )}\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CodeIcon from \"@material-ui/icons/Code\";\r\nimport BuildIcon from \"@material-ui/icons//Build\";\r\nimport GradeIcon from \"@material-ui/icons/Grade\";\r\nimport {\r\n  Drawer,\r\n  Toolbar,\r\n  List,\r\n  Divider,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Backdrop,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst items = [\r\n  {\r\n    href: \"/skills\",\r\n    icon: <BuildIcon />,\r\n    title: \"Skills\",\r\n  },\r\n  {\r\n    href: \"/experience\",\r\n    icon: <GradeIcon />,\r\n    title: \"Experience\",\r\n  },\r\n  {\r\n    href: \"/projects\",\r\n    icon: <CodeIcon />,\r\n    title: \"Projects\",\r\n  },\r\n];\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerText: {\r\n    fontSize: \"1.25rem\",\r\n    fontWeight: 500,\r\n  },\r\n  backdrop: { zIndex: theme.zIndex.drawer + 1, left: \"239px\" },\r\n  bottomPush: {\r\n    position: \"fixed\",\r\n    bottom: 0,\r\n    textAlign: \"center\",\r\n    padding: 15,\r\n    opacity: 0.5,\r\n  },\r\n}));\r\n\r\nexport default function Sidebar(props) {\r\n  const classes = useStyles();\r\n\r\n  const handleDrawerClose = () => {\r\n    props.toggleSidebar(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={props.open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <Toolbar />\r\n        <Divider />\r\n        <List>\r\n          {items.map((item) => (\r\n            <ListItem\r\n              className={classes.listItem}\r\n              component={Link}\r\n              button\r\n              key={item.title}\r\n              to={item.href}\r\n              onClick={handleDrawerClose}\r\n            >\r\n              <ListItemIcon>{item.icon}</ListItemIcon>\r\n              <ListItemText\r\n                classes={{ primary: classes.drawerText }}\r\n                primary={item.title}\r\n              />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <div className={classes.bottomPush}>\r\n          <Typography variant=\"caption\" color=\"textPrimary\" component=\"p\">\r\n            © {new Date().getFullYear()} - Colin Manliclic\r\n          </Typography>\r\n        </div>\r\n      </Drawer>\r\n      <Backdrop\r\n        className={classes.backdrop}\r\n        open={props.open}\r\n        onClick={handleDrawerClose}\r\n      ></Backdrop>\r\n    </>\r\n  );\r\n}\r\n","import { createTheme } from \"@material-ui/core/styles\";\r\n\r\nconst baseTheme = createTheme({\r\n  typography: {\r\n    fontFamily: [\"Playfair Display\", \"sans-serif\"].join(\",\"),\r\n    h1: {\r\n      fontWeight: 800,\r\n    },\r\n    h2: {\r\n      fontWeight: 800,\r\n    },\r\n    h3: {\r\n      fontWeight: 800,\r\n    },\r\n    h4: {\r\n      fontWeight: 800,\r\n    },\r\n    h5: {\r\n      fontWeight: 800,\r\n    },\r\n    h6: {\r\n      fontWeight: 500,\r\n    },\r\n    body1: {\r\n      fontWeight: 500,\r\n    },\r\n  },\r\n});\r\n\r\nconst darkTheme = createTheme({\r\n  ...baseTheme,\r\n  palette: {\r\n    type: \"dark\",\r\n  },\r\n});\r\n\r\nconst lightTheme = createTheme({\r\n  ...baseTheme,\r\n  palette: {\r\n    type: \"light\",\r\n  },\r\n});\r\n\r\nexport { darkTheme, lightTheme };\r\n","import { createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    \"@global\": {\r\n      \"*\": {\r\n        boxSizing: \"border-box\",\r\n        margin: 0,\r\n        padding: 0,\r\n      },\r\n      html: {\r\n        \"-webkit-font-smoothing\": \"antialiased\",\r\n        \"-moz-osx-font-smoothing\": \"grayscale\",\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n      },\r\n      body: {\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n      },\r\n      a: {\r\n        textDecoration: \"none\",\r\n      },\r\n      \"#root\": {\r\n        textAlign: \"left\",\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nconst GlobalStyles = () => {\r\n  useStyles();\r\n\r\n  return null;\r\n};\r\n\r\nexport default GlobalStyles;\r\n","import React from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport { Toolbar } from \"@material-ui/core\";\r\nimport Particles from \"react-tsparticles\";\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport { darkTheme, lightTheme } from \"../theme\";\r\nimport GlobalStyles from \"./GlobalStyles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nexport default function Layout() {\r\n  const [sidebar, setSideBar] = React.useState(false);\r\n  const [theme, setTheme] = React.useState(darkTheme);\r\n\r\n  const handleSidebar = (data) => {\r\n    setSideBar(data);\r\n  };\r\n\r\n  const handleTheme = (data) => {\r\n    data === \"light\" ? setTheme(lightTheme) : setTheme(darkTheme);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={{ ...theme }}>\r\n      <CssBaseline />\r\n      <GlobalStyles />\r\n      <Navbar\r\n        openSidebar={sidebar}\r\n        toggleSidebar={handleSidebar}\r\n        theme={handleTheme}\r\n      ></Navbar>\r\n      <Sidebar open={sidebar} toggleSidebar={handleSidebar}></Sidebar>\r\n      <Particles\r\n        id=\"tsparticles\"\r\n        style={{\r\n          zIndex: 0,\r\n          position: \"fixed\",\r\n          top: 0,\r\n          left: 0,\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n        }}\r\n        options={{\r\n          fpsLimit: 60,\r\n          interactivity: {\r\n            detectsOn: \"canvas\",\r\n            events: {\r\n              onClick: {\r\n                enable: false,\r\n                mode: \"push\",\r\n              },\r\n              onHover: {\r\n                enable: true,\r\n                mode: \"repulse\",\r\n              },\r\n              resize: true,\r\n            },\r\n            modes: {\r\n              bubble: {\r\n                distance: 400,\r\n                duration: 2,\r\n                opacity: 0.8,\r\n                size: 40,\r\n              },\r\n              repulse: {\r\n                distance: 200,\r\n                duration: 0.4,\r\n              },\r\n            },\r\n          },\r\n          particles: {\r\n            color: {\r\n              value: theme === lightTheme ? \"#000\" : \"#FFF\",\r\n            },\r\n            links: {\r\n              color: theme === lightTheme ? \"#000\" : \"#FFF\",\r\n              distance: 150,\r\n              enable: true,\r\n              opacity: 1,\r\n              width: 0.3,\r\n            },\r\n            collisions: {\r\n              enable: true,\r\n            },\r\n            move: {\r\n              direction: \"none\",\r\n              enable: true,\r\n              outMode: \"bounce\",\r\n              random: true,\r\n              speed: 3,\r\n              straight: false,\r\n            },\r\n            number: {\r\n              density: {\r\n                enable: true,\r\n                value_area: 26,\r\n              },\r\n              value: 1,\r\n            },\r\n            opacity: {\r\n              value: 0.5,\r\n            },\r\n            shape: {\r\n              type: \"line\",\r\n            },\r\n            size: {\r\n              random: false,\r\n              value: 5,\r\n            },\r\n          },\r\n          detectRetina: true,\r\n        }}\r\n      />\r\n      <Toolbar />\r\n      <Outlet />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import { Typography, Card, Grid, CardContent } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    height: \"100%\",\r\n  },\r\n}));\r\n\r\nconst ExperienceCard = ({ title, organization }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid item xs={12} md={12} lg={6}>\r\n      <Card variant=\"outlined\" className={classes.card}>\r\n        <CardContent>\r\n          <Typography variant=\"h5\" color=\"textPrimary\">\r\n            {title}\r\n          </Typography>\r\n          <Typography color=\"textPrimary\" variant=\"subtitle1\">\r\n            {organization}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport const generateExperienceCards = (experiences) => {\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      justifyContent=\"flex-start\"\r\n      alignItems=\"stretch\"\r\n      spacing={4}\r\n    >\r\n      {experiences.map((experience, index) => (\r\n        <ExperienceCard\r\n          key={index}\r\n          title={experience.title}\r\n          organization={experience.organization}\r\n        />\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n","import { Helmet } from \"react-helmet\";\r\nimport { Container, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Anime from \"react-anime\";\r\nimport { generateExperienceCards } from \"../helpers/ExperienceHelper\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    paddingBottom: 50,\r\n  },\r\n}));\r\n\r\nconst ExperienceList = () => {\r\n  const experiences = [\r\n    {\r\n      title: \"Software Developer\",\r\n      organization: \"Apparatus Global Solutions\",\r\n    },\r\n    {\r\n      title: \"Software Developer (Co-op)\",\r\n      organization: \"Apparatus Global Solutions\",\r\n    },\r\n    {\r\n      title: \"Computer Programmer Analyst (4.08 GPA - President's Honour Roll)\",\r\n      organization: \"Fanshawe College (Ontario College Advanced Diploma)\",\r\n    },\r\n    {\r\n      title: \"Peer Mentor\",\r\n      organization: \"Fanshawe College\",\r\n    },\r\n    {\r\n      title: \"Dean's Honour Roll 2018\",\r\n      organization: \"Fanshawe College\",\r\n    },\r\n    {\r\n      title: \"Dean's Honour Roll 2019\",\r\n      organization: \"Fanshawe College\",\r\n    },\r\n    {\r\n      title: \"Dean's Honour Roll 2020\",\r\n      organization: \"Fanshawe College\",\r\n    },\r\n    {\r\n      title: \"Dean's Honour Roll 2021\",\r\n      organization: \"Fanshawe College\",\r\n    },\r\n  ];\r\n\r\n  return generateExperienceCards(experiences);\r\n};\r\n\r\nexport default function Experience() {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Experience | Colin</title>\r\n      </Helmet>\r\n      <Container className={classes.container}>\r\n        <Anime opacity={[0, 1]} translateY={\"1em\"} delay={(e, i) => i * 1000}>\r\n          <Typography variant=\"h3\" paragraph style={{ fontWeight: 800 }}>\r\n            Experience\r\n          </Typography>\r\n          <ExperienceList />\r\n        </Anime>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Tooltip,\r\n  IconButton,\r\n  Typography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    height: \"100%\",\r\n    display: \"inline-flex\",\r\n  },\r\n}));\r\n\r\nconst ProjectCard = ({ imageLink, title, description, type, link }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid item xs={12} md={12} lg={6}>\r\n      <Card variant=\"outlined\" className={classes.card}>\r\n        {imageLink ? (\r\n          <CardMedia\r\n            component=\"img\"\r\n            style={{\r\n              objectPosition: \"top right\",\r\n              height: \"auto\",\r\n              width: \"40%\",\r\n            }}\r\n            image={process.env.PUBLIC_URL + imageLink}\r\n          />\r\n        ) : null}\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\">\r\n            {title}\r\n          </Typography>\r\n          <Typography variant=\"body1\" color=\"textPrimary\">\r\n            {description}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Tooltip title={type === \"Twitter\" ? \"Twitter\" : \"Github Repo\"}>\r\n            <IconButton\r\n              size=\"small\"\r\n              color=\"inherit\"\r\n              edge=\"end\"\r\n              style={{ alignSelf: \"flex-end\" }}\r\n              href={link}\r\n              target=\"_blank\"\r\n            >\r\n              {type === \"Twitter\" ? (\r\n                <TwitterIcon fontSize=\"large\" />\r\n              ) : (\r\n                <GitHubIcon fontSize=\"large\" />\r\n              )}\r\n            </IconButton>\r\n          </Tooltip>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport const generateProjectCards = (projects) => {\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      justifyContent=\"flex-start\"\r\n      alignItems=\"stretch\"\r\n      spacing={3}\r\n    >\r\n      {projects.map((project, index) => (\r\n        <ProjectCard\r\n          key={index}\r\n          imageLink={project.imageLink}\r\n          title={project.title}\r\n          description={project.description}\r\n          type={project.type}\r\n          link={project.link}\r\n        />\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n","import { Helmet } from \"react-helmet\";\r\nimport { Container, Typography } from \"@material-ui/core\";\r\nimport Anime from \"react-anime\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { generateProjectCards } from \"../helpers/ProjectHelper\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    paddingBottom: 50,\r\n  },\r\n}));\r\n\r\nconst ProjectList = () => {\r\n  const projects = [\r\n    {\r\n      imageLink: \"/assets/images/art.jpg\",\r\n      title: \"Digital Art (Processing)\",\r\n      description:\r\n        \"These are digital art pieces created by me by using the programming tool Processing (similar to Java). I like to explore all types of coding, even creative coding, where the goal is to create something expressive than functional. I upload all my pieces to my personal art Twitter account.\",\r\n      type: \"Twitter\",\r\n      link: \"https://twitter.com/lawyu3\",\r\n    },\r\n    {\r\n      imageLink: \"/assets/images/expressionTreeEval.jpg\",\r\n      title: \"Expression Tree Evaluator (INFO5101 C# Advanced Topics Project)\",\r\n      description:\r\n        \"C# program reads a CSV file filled with infix notation expressions which are then converted into postfix and finally prefix notation using expression trees.\",\r\n      type: \"GitHub Repo\",\r\n      link: \"https://github.com/AnthonyJM18/ExpressionTreeEvaluator\",\r\n    },\r\n    {\r\n      imageLink: \"/assets/images/rideTheBus.jpg\",\r\n      title:\r\n        \"Ride The Bus Multiplayer Game (INFO5060 Component-based Programming with .NET Project)\",\r\n      description:\r\n        \"Ride The Bus card game application built on C# . It utilizes that Windows Communication Foundation framework to simulate a LAN computing environment for multiplayer.\",\r\n      type: \"GitHub Repo\",\r\n      link: \"https://github.com/c-manliclic/INFO5060_Project2\",\r\n    },\r\n    {\r\n      title: \"Portfolio Website\",\r\n      description:\r\n        \"Portfolio website built on React. It uses external tools such as tsParticles, react-anime, react-helmet, react-router, Material UI, and Github Pages.\",\r\n      type: \"GitHub Repo\",\r\n      link: \"https://github.com/c-manliclic/c-manliclic.github.io\",\r\n    },\r\n  ];\r\n\r\n  return generateProjectCards(projects);\r\n};\r\n\r\nexport default function Projects() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Projects | Colin</title>\r\n      </Helmet>\r\n      <Container className={classes.container}>\r\n        <Anime opacity={[0, 1]} translateY={\"1em\"} delay={(e, i) => i * 1000}>\r\n          <Typography variant=\"h3\" paragraph>\r\n            Projects\r\n          </Typography>\r\n          <ProjectList></ProjectList>\r\n        </Anime>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import { Typography, Card, Grid, CardContent } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    height: \"100%\",\r\n  },\r\n}));\r\n\r\nconst SkillCard = ({ skillName, yearsOfExperience }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid item>\r\n      <Card variant=\"outlined\" className={classes.card}>\r\n        <CardContent>\r\n          <Typography variant=\"h5\" color=\"textPrimary\">\r\n            {skillName}\r\n          </Typography>\r\n          <Typography color=\"textPrimary\" variant=\"subtitle1\">\r\n            {yearsOfExperience}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport const generateSkillCards = (skills) => {\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      justifyContent=\"flex-start\"\r\n      alignItems=\"stretch\"\r\n      spacing={1}\r\n      style={{ marginBottom: \"20px\" }}\r\n    >\r\n      {skills.map((skill, index) => (\r\n        <SkillCard\r\n          key={index}\r\n          skillName={skill.name}\r\n          yearsOfExperience={skill.yearsOfExperience}\r\n        />\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n","import { Helmet } from \"react-helmet\";\r\nimport { Container, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Anime from \"react-anime\";\r\nimport { generateSkillCards } from \"../helpers/SkillHelper\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    paddingBottom: 75,\r\n  },\r\n}));\r\n\r\nconst FrontEndSkillList = () => {\r\n  const frontEndSkills = [\r\n    { name: \"Javascript\", yearsOfExperience: \"4 years of experience\" },\r\n    { name: \"Typescript\", yearsOfExperience: \"2 years of experience\" },\r\n    { name: \"DevExtreme\", yearsOfExperience: \"2 years of experience\" },\r\n    { name: \"jQuery\", yearsOfExperience: \"1 year of experience\" },\r\n    { name: \"React\", yearsOfExperience: \"1 year of experience\" },\r\n    { name: \"Material UI\", yearsOfExperience: \"1 year of experience\" },\r\n  ];\r\n  return generateSkillCards(frontEndSkills);\r\n};\r\n\r\nconst BackEndSkillList = () => {\r\n  const backEndSkills = [\r\n    { name: \"C#\", yearsOfExperience: \"4 years of experience\" },\r\n    { name: \"SQL\", yearsOfExperience: \"4 year of experience\" },\r\n    { name: \"ASP.NET\", yearsOfExperience: \"4 years of experience\" },\r\n    { name: \"Java\", yearsOfExperience: \"2 years of experience\" },\r\n    { name: \"C++\", yearsOfExperience: \"2 years of experience\" },\r\n  ];\r\n  return generateSkillCards(backEndSkills);\r\n};\r\n\r\nexport default function Skills() {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Skills | Colin</title>\r\n      </Helmet>\r\n      <Container className={classes.container}>\r\n        <Anime opacity={[0, 1]} translateY={\"1em\"} delay={(e, i) => i * 1000}>\r\n          <Typography variant=\"h3\" paragraph>\r\n            Skills\r\n          </Typography>\r\n          <Typography variant=\"h4\" paragraph>\r\n            Front-end\r\n          </Typography>\r\n          <FrontEndSkillList></FrontEndSkillList>\r\n          <Typography variant=\"h4\" paragraph style={{ marginTop: \"50px\" }}>\r\n            Back-end\r\n          </Typography>\r\n          <BackEndSkillList></BackEndSkillList>\r\n        </Anime>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import { Helmet } from \"react-helmet\";\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  IconButton,\r\n  Tooltip,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport Anime from \"react-anime\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    paddingBottom: 50,\r\n  },\r\n}));\r\n\r\nexport default function Home() {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Colin</title>\r\n      </Helmet>\r\n\r\n      <Container className={classes.container}>\r\n        <Anime opacity={[0, 1]} translateY={\"1em\"} delay={(e, i) => i * 1000}>\r\n          <Typography variant=\"h1\" paragraph>\r\n            Hi, I'm Colin!\r\n          </Typography>\r\n          <Typography variant=\"body1\" paragraph>\r\n            I'm a software developer who is knowledgeable in both front and\r\n            back-end languages and tools. I am proficient in object-oriented,\r\n            software, client/server, and database development.\r\n          </Typography>\r\n          <Typography variant=\"body1\" paragraph>\r\n            Programming is constantly evolving and changing, so I believe my\r\n            most significant strength is learning and making myself comfortable\r\n            with new technologies. I also prioritize a team's success rather\r\n            than the individual because high morale can result in incredible\r\n            innovations.\r\n          </Typography>\r\n          <Typography variant=\"body1\" paragraph>\r\n            My portfolio showcases the skills I have learned over the years. As\r\n            well as awards, experiences, and projects.\r\n          </Typography>\r\n          <Typography variant=\"body1\" paragraph>\r\n            Welcome 😊\r\n          </Typography>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"flex-start\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Tooltip title=\"Github\">\r\n              <IconButton\r\n                size=\"small\"\r\n                color=\"inherit\"\r\n                edge=\"start\"\r\n                href=\"https://github.com/c-manliclic\"\r\n                target=\"_blank\"\r\n              >\r\n                <GitHubIcon fontSize=\"large\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"LinkedIn\">\r\n              <IconButton\r\n                size=\"small\"\r\n                color=\"inherit\"\r\n                edge=\"start\"\r\n                href=\"https://www.linkedin.com/in/colinmanliclic/\"\r\n                target=\"_blank\"\r\n              >\r\n                <LinkedInIcon fontSize=\"large\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"E-mail\">\r\n              <IconButton\r\n                size=\"small\"\r\n                color=\"inherit\"\r\n                edge=\"start\"\r\n                href=\"mailto:colinmanliclic@gmail.com\"\r\n              >\r\n                <EmailIcon fontSize=\"large\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Grid>\r\n        </Anime>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import { Navigate } from \"react-router-dom\";\r\nimport Layout from \"./components/Layout\";\r\nimport Experience from \"./pages/Experience\";\r\nimport Projects from \"./pages/Projects\";\r\nimport Skills from \"./pages/Skills\";\r\nimport Home from \"./pages/Home\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/\",\r\n    element: <Layout />,\r\n    children: [\r\n      { path: \"\", element: <Home /> },\r\n      { path: \"skills\", element: <Skills /> },\r\n      { path: \"experience\", element: <Experience /> },\r\n      { path: \"projects\", element: <Projects /> },\r\n      { path: \"\", element: <Navigate to=\"/\" /> },\r\n      { path: \"*\", element: <Navigate to=\"/\" /> },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import \"./App.css\";\nimport { useRoutes } from \"react-router-dom\";\nimport routes from \"./routes\";\n\nfunction App() {\n  const routing = useRoutes(routes);\n  return routing;\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}